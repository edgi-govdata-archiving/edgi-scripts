version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.6.2
    environment:
      - EDGI_ZOOM_DELETE_AFTER_UPLOAD: '1'
    steps:
      - checkout

      - run:
          name: skip destructive action on non-main
          command: |
            echo '[[ "main" != "$CIRCLE_BRANCH" ]] && unset EDGI_ZOOM_DELETE_AFTER_UPLOAD' >> $BASH_ENV

      - run:
          name: decrypt files
          command: |
            openssl aes-256-cbc -k "$EDGI_ZOOM_API_SECRET" -in client_secret.json.enc -out client_secret.json -d -md sha256
            openssl aes-256-cbc -k "$EDGI_ZOOM_API_SECRET" -in .youtube-upload-credentials.json.enc -out .youtube-upload-credentials.json -d -md sha256


      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            # When fetching package from new git repo, use (w)ipe action
            pip install -r requirements.txt --exists-action w

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      
      # TODO: re-enable when we add docker credentials
      # Error: https://app.circleci.com/pipelines/github/edgi-govdata-archiving/edgi-scripts/8812/workflows/9b3647a4-4fb7-4d43-83f7-ac48f3097099/jobs/46128
      # ```
      #  Warning: No authentication provided, using CircleCI credentials for pulls from Docker Hub. image cache not found on this host, downloading circleci/python:3.6.2
      # unauthorized: authentication required
      # ```
      # Possible solution: https://circleci.com/docs/2.0/private-images/
      # - run:
      #     name: run script
      #     command: |
      #       . venv/bin/activate
      #       python3 scripts/upload_zoom_recordings.py

workflows:
  version: 2
  commit:
    jobs:
      - build
  youtube-upload:
    jobs:
      - build
    triggers:
      - schedule:
          # Every hour at :10
          cron: "10 * * * 1-5"
          filters:
            branches:
              only: main
